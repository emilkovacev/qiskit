name: Deploy release artifacts
on:
  push:
    tags:
      - '*'
jobs:
  macos-c-api-bin:
    name: Build macos c-api binary
    uses: ./.github/workflows/ci-api-binary.yml
    with:
      release-suffix: "macos-arm64"
      runner: "macos-latest"
  linux-c-api-bin:
    name: Build linux c-api binary
    uses: ./.github/workflows/ci-api-binary.yml
    with:
      release-suffix: "linux-amd64"
      runner: "ubuntu-latest"
---
name: Deploy C API Binaries
on:
  workflow_call:
    inputs:
      release-suffix:
        description: >
          Suffix to add to the end of the release (e.g. macos-arm64)
        type: string
        required: true

      runner:
        description: >
          Describes the system this workflow should run on.
        type: string
        required: true

jobs:
  c-api-binary-linux:
    name: "C API Binary / Linux and Mac"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cbindgen
        run: |
          cargo install cbindgen
          echo "$HOME/.cargo/bin" >> "$GITHUB_PATH"
      - name: Set Environment Variables
        run: |
          QISKIT_CEXT_VERSION=$(
            cargo metadata --format-version=1 --no-deps | jq -r '.packages[] | select( .name == "qiskit-cext" ).version'
          )
          QISKIT_CEXT_DIR="qiskit-c-$QISKIT_CEXT_VERSION-${{ inputs.release-suffix }}"

          echo "QISKIT_CEXT_VERSION=$QISKIT_CEXT_VERSION" >> $GITHUB_ENV
          echo "QISKIT_CEXT_DIR=${QISKIT_CEXT_DIR}" >> $GITHUB_ENV
      - name: Build Binary
        run: make c
      - name: Archive Binaries
        run: |
          mkdir ${{ env.QISKIT_CEXT_DIR }}
          mv dist ${{ env.QISKIT_CEXT_DIR }}
          tar czf ${{ env.QISKIT_CEXT_DIR }}.tar.gz ${{ env.QISKIT_CEXT_DIR }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            ${{ env.QISKIT_CEXT_DIR }}.tar.gz
          fail_on_unmatched_files: true
